Paper Review Log:  Session 5 (2024/11/13)

Name and (crsid): Sidharrth Nagappan (sn666)

Paper Title and Authors: 

Paper Summary: Tensor Program Optimization with Probabilistic Programs by:
Junru Shao, Xiyou Zhou, Siyuan Feng, Bohan Hou, Ruihang Lai, Hongyi Jin, Wuwei Lin, Masahiro Masuda, Cody Hao Yu, Tianqi Chen

MetaSchedule is introduced; it's a domain-specific language for probabilistic programming. Domain experts are allowed to define program transformations that incorporate stochasticity and probability distribution. Paper also searches the transformation space to find optimized tensor programs. MetaSchedule exceeds existing optimisation frameworks by up to a 48% speed in deep learning. 

Punch-line of the Paper:

MetaSchedule is essentially a novel abstraction to create a robust and easy-to-search search space that can be used for tensor program optimisation. By abstracting away the complexity of the search and exposing search construction functionality, domain experts can input their knowledge and influence stochastic transformations without getting bogged down. 

I also like that they took into account development time, but since they opened this direction of reasoning, more analysis could have been done surrounding ease of use:

"""
Notably, it took a graduate student only 2 days to craft the 82-line Use-Tensor-Core module in Python (see supplementary materials), which provides strong evidence of the convenience of customization and composition.
"""

Existing work relied on static search spaces, and required a deeper understanding of the underlying search strategy. MetaScheduler abstracts that complexity away and allows domain experts to control the search space. It also outperforms existing state-of-the-art frameworks when tested on models like ResNet-50, MobileNet-V2 and BERT-Base, and against frameworks like Apache TVM and Pytorch. 

Any major criticism to the authors:

Only 3 models were included in the comparison. Given that the implementation complexity will not be too significant, more models can be included. 

Documented code is not available, as raised in this forum:
https://discuss.tvm.apache.org/t/metaschedule-documentation/15922. The end of the paper mentions that they will open-source the code but in the 2 years since it's release, clear documentation is still not available, and users have to pull the raw code from the central repository. There is little testing future work can do without clear documentation.